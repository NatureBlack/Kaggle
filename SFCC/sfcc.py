import numpy as np
import pandas as pd
import xgboost as xgb

# load file from text file, also binary buffer generated by xgboost
train_file = '../../dataset/SFCC/train.csv'
test_file = '../../dataset/SFCC/test.csv'
_train = pd.read_csv(train_file)
_test = pd.read_csv(test_file)
print(_train)
print(dir(_train))
#
#dtrain = xgb.DMatrix(_train)
#dtest = xgb.DMatrix(_test)
#print(dtrain.get_label())
#rows = dtrain.num_row()
#print(rows, type(rows))

# specify parameters via map, definition are same as c++ version
param = {'max_depth':2, 'eta':1, 'silent':1, 'objective':'binary:logistic'}

# specify validations set to watch performance
watchlist  = [(dtest, 'eval'), (dtrain, 'train')]
num_round = 2
bst = xgb.train(param, dtrain, num_round, watchlist)
